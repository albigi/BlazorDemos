@page "/PrintInfo"
@using server

@inject GlobalIncrementHandler GlobalIncrementHandler

<h1>Runtime Info</h1>

    <table class="border-0 align-content-center align-self-center">
        @{
            foreach (var info in Info)
            {
                <tr>
                    <td>@info.Key</td>
                    <td>@info.Value</td>
                </tr>
            }
        }
    </table>

<p>Entry point: @entrypoint</p>
<hr/>

<p>Refresh count</p>
<ul>
    <li>Global: @globalRefresh</li>
    <li>Local: @localRefresh</li>
</ul>

<button class="btn btn-primary" @onclick="Refresh">Refresh</button>

@code {
    private IDictionary<string, string> Info => infoPrinter.PrintEnvironmentInfo();
    private static int globalRefresh = 0;
    private int localRefresh = 0;
    private string entrypoint;
    private EnvironmentPrinter infoPrinter;
    
    protected override void OnInitialized() {
        GlobalIncrementHandler.OnIncrement += () =>
        {
            InvokeAsync(StateHasChanged);
        };
        Refresh();
    }

    private void Refresh() {

        infoPrinter = new EnvironmentPrinter();

        GlobalIncrementHandler.Increment(ref globalRefresh);
        localRefresh++;
        
        try {
            entrypoint = System.Reflection.Assembly.GetEntryAssembly().EntryPoint.Name;
            {
                
            };
        }
        catch {
            entrypoint = "Reflection not available";
        }

    }
}
